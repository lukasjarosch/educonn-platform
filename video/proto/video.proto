syntax = "proto3";

package educonn.video;

option go_package = "github.com/lukasjarosch/educonn-platform/video/proto";

service Video {
   rpc Create(CreateVideoRequest) returns (CreateVideoResponse) {}
   rpc GetById(GetVideoRequest) returns (GetVideoResponse) {}
   rpc GetByUserId(GetByUserIdRequest) returns (GetByUserIdResponse) {}
}

// ----------------------------
// VIDEO RESOURCE
// ----------------------------
message VideoDetails {
   string id = 1;
   string title = 2;
   string description = 3;
   repeated string tags = 4;
   VideoStatus status = 5;
   VideoStatistics statistics = 6;
   repeated VideoThumbnail thumbnails = 7;
   VideoStorage storage = 8;
}

message VideoStorage {
    string rawKey = 1;
    string transcodedKey = 2;
}

message VideoStatus {
    bool completed = 1;
    bool warning = 2;
    bool error = 3;
    repeated string warningMessages = 4;
    repeated string errorMessages = 5;
}

message VideoStatistics {
    int64 viewCount = 1;
    int64 likeCount = 2;
    int64 dislikeCound = 3;
}

message VideoThumbnail {
    string url = 1;
    string width = 2;
    string height = 3;
}


// ----------------------------
// EVENTS
// ----------------------------
message VideoCreatedEvent {
    VideoDetails video = 1;
    string userId = 2;
}

message VideoProcessedEvent {
    VideoDetails video = 1;
    string userId = 2;
}

// ----------------------------
// REQUESTS AND RESPONSES
// ----------------------------

message CreateVideoRequest {
    VideoDetails video = 1;
}

message CreateVideoResponse {
    VideoDetails video = 1;
    repeated Error errors = 2;
}

message GetVideoRequest {
    string id = 1;
}

message GetVideoResponse {
    VideoDetails video = 1;
    string signedUrl = 2;
}

message GetByUserIdRequest {
    string userId = 1;
}

message GetByUserIdResponse {
    repeated VideoDetails videos = 1;
}

// ----------------------------
// MISC
// ----------------------------
message Error {
    int32 code = 1;
    string description = 2;
}
